{"version":3,"file":"static/js/644.871ecba2.chunk.js","mappings":"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CA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIurB,EAAqCxrB,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGFH,EAAAA,iBAA2B,SACzBtC,EACAL,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","sources":["../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@metamask/eth-sig-util/src/utils.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/openlogin-adapter/node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts"],"sourcesContent":["import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n  TxOptions,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n",null,null,null,null,null,null,null,null,null,null,"import type { AccessListEIP2930TxData, FeeMarketEIP1559TxData, TxData } from \"@ethereumjs/tx\";\nimport { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nexport interface ExtendedAccessListEIP2930TxData extends AccessListEIP2930TxData {\n  from: string;\n}\n\nexport interface ExtendedFeeMarketEIP1559Transaction extends FeeMarketEIP1559TxData {\n  from: string;\n}\n\nexport interface ExtendedTxData extends TxData {\n  from: string;\n}\n\nexport type TransactionParams = ExtendedFeeMarketEIP1559Transaction & ExtendedAccessListEIP2930TxData & ExtendedTxData;\n\nexport interface MessageParams<T> {\n  from: string;\n  data: T;\n}\n\nexport interface TypedMessageParams<T> {\n  from: string;\n  version: string;\n  data: T;\n}\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport interface WalletMiddlewareOptions {\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  processDecryptMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => string;\n  processEncryptionPublicKey?: (address: string, req: JRPCRequest<unknown>) => Promise<string>;\n  processEthSignMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => Promise<string>;\n  processPersonalMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => Promise<string>;\n  processTransaction?: (txParams: TransactionParams, req: JRPCRequest<unknown>) => Promise<string>;\n  processSignTransaction?: (txParams: TransactionParams, req: JRPCRequest<unknown>) => Promise<string>;\n  processTypedMessage?: (msgParams: MessageParams<TypedDataV1>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n  processTypedMessageV3?: (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n  processTypedMessageV4?: (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createWalletMiddleware, WalletMiddlewareOptions } from \"./walletMidddleware\";\n\nexport type IProviderHandlers = WalletMiddlewareOptions;\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport interface AddEthereumChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addChain: (params: AddEthereumChainParameter) => Promise<void>;\n  switchChain: (params: { chainId: string }) => Promise<void>;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport interface IAccountHandlers {\n  updatePrivatekey: (params: { privateKey: string }) => Promise<void>;\n}\n\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/ethRpcMiddlewares\";\nimport { MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/walletMidddleware\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers } from \"../../rpc/ethRpcMiddlewares\";\nimport { MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/walletMidddleware\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({ privateKey: privKeyBuffer, data: msgParams.data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({ privateKey: privKeyBuffer, data: msgParams.data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({ privateKey: privKeyBuffer, data: msgParams.data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BigNumber) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BigNumber {\n  if (BigNumber.isBigNumber(inputHex)) return inputHex;\n  return new BigNumber(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BigNumber, numerator: number | BigNumber, denominator: number | BigNumber): BigNumber {\n  const numberBN = new BigNumber(numerator);\n  const denomBN = new BigNumber(denominator);\n  return targetBN.multipliedBy(numberBN).dividedBy(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { get } from \"@toruslabs/http-helpers\";\nimport { BigNumber } from \"bignumber.js\";\n\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/walletMidddleware\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.multipliedBy(0.9).dp(0, 1);\n    const bufferedGasLimitBn = initialGasLimitBn.multipliedBy(multiplier).dp(0, 1);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport {\n  AddEthereumChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createEthMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n"],"names":["txData","opts","cache","hash","undefined","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","DEFAULT_HARDFORK","Istanbul","nonce","gasLimit","to","value","data","v","r","s","type","this","_type","ethereumjs_util_1","toBuffer","toNumber","txOptions","toB","vB","rB","sB","length","_validateCannotExceedMaxInteger","Object","BaseTransaction","capability","includes","stringError","errors","getBaseFee","gt","push","concat","isSigned","verifySignature","fee","getDataFee","addn","common","param","gteHardfork","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","isActivatedEIP","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","publicKey","getSenderPublicKey","unpadBuffer","e","publicToAddress","privateKey","msg","_errorMsg","Error","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","index","indexOf","splice","chainId","chainIdBN","eq","copy","isSupportedChainId","chain","hardfork","forCustomChain","name","networkId","_a","values","bits","cannotEqual","entries","_c","key","gte","bufferToHex","toString","hf","postfix","exports","TRANSACTION_TYPE_BUFFER","Buffer","from","padStart","_super","_this","accessList","maxFeePerGas","maxPriorityFeePerGas","_getCommon","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","checkMaxInitCodeSize","freeze","_b","__extends","FeeMarketEIP1559Transaction","serialized","slice","equals","decode","Array","isArray","fromValuesArray","fromSerializedTx","validateNoLeadingZeroes","call","getDataFeeEIP2930","isFrozen","baseFee","gasPrice","min","sub","add","bnToUnpaddedBuffer","base","raw","encode","hashMessage","message","keccak256","serialize","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","bnToHex","errorStr","_getSharedErrorPostfix","baseTransaction_1","AccessListEIP2930Transaction","yParity","enumerable","get","default","__exportStar","_validateTxV","chainIdDoubled","muln","Transaction","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","onEIP155BlockOrLater","TransactionFactory","txType","_1","EIP","isBuffer","fromSerializedData","transactionID","_common","isAccessListBuffer","input","firstItem","Capability","AccessLists","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","encrypt","version","utils_1","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","getPublicKeyFor","signature","messageHash","sig","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","join","encodeField","types","V3","V4","encodeData","lastIndexOf","parsedType","typeValuePairs","map","ethereumjs_abi_1","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","sort","t","results","Set","match","has","hashStruct","sanitizeData","sanitizedData","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","fill","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","test","String","prototype","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","buffer","toLowerCase","module","assert","val","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","endian","isBN","negative","words","red","_init","wordSize","window","require","parseHex4Bits","string","c","charCodeAt","parseHexByte","lowerBound","parseBase","str","start","end","len","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","j","w","off","strip","limbLen","limbPow","total","mod","word","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","ret","toJSON","toArrayLike","ArrayType","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","lten","lte","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","ethjsUtil","secp256k1","addr","bytes_1","eip1191ChainId","stripHexPrefix","prefix","hash_1","parseInt","toUpperCase","nonceBN","salt","initCode","fromBuf","saltBuf","initCodeBuf","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","bytes","allocUnsafe","first","isHexString","padToEven","intToBuffer","isHexPrefixed","ba","array","keccak224","keccak384","keccak512","createHash","update","digest","padded","rlp","assign","fields","_fields","label","obj_1","forEach","getter","setter","allowZero","allowLess","defineProperty","configurable","set","alias","d","keys_1","secp256k1v3","der","Uint8Array","compressed","RangeError","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","alloc","lenbyte","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","point","toPublicKey","getX","getY","bn","keyFromPublic","scalar","shared","pub","calculateSigRecovery","isValidSigRecovery","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","req","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","txParams","params","extraParams","msgParams","_objectSpread$4","firstParam","secondParam","warning","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","sendTransaction","signTransaction","signMessage","signPersonalMessage","signTypedData","WalletConnectProvider","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","_defineProperty","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_ref2","addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","chainName","rpcUrls","log","configure","lookupNetwork","WalletInitializationError","connected","WalletLoginError","provider","connectedHexChainId","isHexStrict","emit","getProviderHandlers","ethMiddleware","engine","JRPCEngine","providerFromEngine","updateProviderEngineProxy","on","payload","connectedChainId","rpcUrl","maybeConfig","BaseProvider","signTx","privKey","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","unsignedEthTx","signedTx","getProviderEngineProxy","privateToAddress","providerEngineProxy","txHash","rawMessageSig","privKeyBuffer","personalSign","getEncryptionPublicKey","stripped","buff","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","hex","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","times","dp","baseChange","conversionUtil","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","inputBn","addHexPrefix","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","multipliedBy","dividedBy","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","url","estimates","normalizedEstimates","_objectSpread$2","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","referrer","referrerPolicy","SafeGasPrice","ProposeGasPrice","FastGasPrice","TransactionFormatter","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","Hardfork","customChainParams","Number","defaultHardfork","Common","clonedTxParams","gas","getDefaultGasLimit","defaultGasLimit","getDefaultGasFees","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","latestBlock","supportsEIP1559","baseFeePerGas","isLegacyGasAPICompatible","gasData","gasFeeEstimates","gasEstimateType","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","txMeta","_objectSpread","block","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","analyzeGasUsage","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","network","chainSwitchHandlers","blockExplorerUrls","nativeCurrency","ticker","symbol","tickerName","blockExplorer","switchChain","chainParams","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","accountParams","wallet_updateAccount","createAccountMiddleware"],"sourceRoot":""}